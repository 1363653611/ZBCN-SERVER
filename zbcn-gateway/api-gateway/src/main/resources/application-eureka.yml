server:
  port: 9201
service-url:
  user-service: lb://user-service #此处需要使用lb协议
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能
          lower-case-service-id: true #使用小写服务名，默认是大写
      routes:
        - id: user_server_route #路由的ID
          uri: ${service-url.user-service} #匹配后路由地址
          order: 10 # 路由执行顺序（也可理解成过滤器的执行顺序），执行顺序是从小到大执行，较高的值被解释为较低的优先级。
          predicates: # 断言，路径相匹配的进行路由
            - Path=/user/{id}
          filters:
            - name: Hystrix # 熔断（如果服务失败，则熔断）
              args:
                name: fallbackcmd
                fallbackUri: forward:/fallback
            - name: Retry # 重复请求
              args:
                retries: 1 #需要进行重试的次数
                statuses: BAD_GATEWAY #返回哪个状态码需要进行重试，返回状态码为5XX进行重试
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false
            - name: RequestRateLimiter # 限流
              args:
                redis-rate-limiter.replenishRate: 1 #每秒允许处理的请求数量
                redis-rate-limiter.burstCapacity: 2 #每秒最大处理的请求数量
                key-resolver: "#{@ipKeyResolver}" #限流策略，对应策略的Bean
# 注册中心
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8000/eureka/
    register-with-eureka: true
    fetch-registry: true

  profiles:
    active: dev

  redis:
    host: localhost
    port: 6379
    # password: 123456
logging:
  level:
    org.springframework.cloud.gateway: debug